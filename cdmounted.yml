---
- name: Find and optionally disconnect VMs with ISO files mounted to CD drives
  hosts: all
  gather_facts: false
  connection: local
  vars:
    # AAP credential variables - these will be injected by AAP
    vcenter_username: "{{ ansible_user }}"
    vcenter_password: "{{ ansible_password }}"
    
    # Control variables
    disconnect: true
    dry_run: false  # Set to true to see what would be disconnected without making changes
    
    # Force disconnect bypasses guest OS CD locks (resolves dialog issue)
    force_disconnect: true
    
    # VM blacklist - VMs to exclude from disconnect operations (case-sensitive)
    vm_blacklist: []
    # Example: vm_blacklist: ["critical-vm-01", "production-db", "backup-server"]
    
    # Internal variables
    vms_with_cd_media: []
    failed_vm_queries: []
    
  tasks:
    - name: Validate required variables
      ansible.builtin.assert:
        that:
          - vcenter_username is defined and vcenter_username | length > 0
          - vcenter_password is defined and vcenter_password | length > 0
          - inventory_hostname is defined
        fail_msg: "Missing required connection credentials or hostname"
        quiet: true

    - name: Display operation mode
      ansible.builtin.debug:
        msg: |
          ===================================================
          OPERATION MODE:
          ===================================================
          Target ESXi Host: {{ inventory_hostname }}
          Disconnect Mode: {{ disconnect }}
          Dry Run Mode: {{ dry_run }}
          Force Disconnect: {{ force_disconnect }}
          VM Blacklist: {{ vm_blacklist | length }} VMs excluded
          
          DIALOG HANDLING:
          Force disconnect will bypass guest OS CD lock dialogs
          ===================================================

    - name: Test ESXi connection and gather VM information
      ansible.builtin.include_tasks: tasks/gather_vm_info.yml

    - name: Process each VM to find CD devices with mounted media
      ansible.builtin.include_tasks: tasks/process_vm_hardware.yml
      loop: "{{ vm_info.virtual_machines }}"
      loop_control:
        loop_var: vm_item
        index_var: vm_index
        label: "{{ vm_item.guest_name | default('Unknown VM') }}"

    - name: Display VMs with connected CD devices
      ansible.builtin.include_tasks: tasks/display_results.yml
      when: vms_with_cd_media | length > 0

    - name: Perform disconnect operations if enabled
      ansible.builtin.include_tasks: tasks/disconnect_cd_devices.yml
      when: 
        - disconnect | bool
        - vms_with_cd_media | length > 0

    - name: Display operation summary
      ansible.builtin.include_tasks: tasks/display_summary.yml