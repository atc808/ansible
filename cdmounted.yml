---
- name: Find VMs with ISO files mounted to CD drives
  hosts: all
  gather_facts: false
  connection: local
  
  vars:
    # AAP credential variables - these will be injected by AAP
    vcenter_username: "{{ ansible_user }}"
    vcenter_password: "{{ ansible_password }}"
    
  tasks:
    - name: Gather information about all VMs on ESXi host
      community.vmware.vmware_vm_info:
        hostname: "{{ inventory_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        vm_type: vm
        show_attribute: true
      register: vm_info
      delegate_to: localhost

    - name: Get detailed configuration for each VM
      community.vmware.vmware_guest_info:
        hostname: "{{ inventory_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        uuid: "{{ item.uuid }}"
        schema: "vsphere"
        properties:
          - "config.hardware.device"
          - "summary.runtime.powerState"
      register: vm_details
      loop: "{{ vm_info.virtual_machines }}"
      delegate_to: localhost

    - name: Initialize list for VMs with CD media
      set_fact:
        vms_with_cd_media: []

    - name: Check each VM for mounted ISO files on CD drives
      set_fact:
        vms_with_cd_media: "{{ vms_with_cd_media + [vm_cd_info] }}"
      vars:
        vm_cd_info:
          vm_name: "{{ item.instance.summary.config.name }}"
          power_state: "{{ item.instance.summary.runtime.powerState }}"
          esxi_host: "{{ inventory_hostname }}"
          cd_devices: "{{ cd_devices_list }}"
        cd_devices_list: "{{ item.instance.config.hardware.device | 
          selectattr('deviceInfo.label', 'match', '^CD/DVD.*') |
          selectattr('backing.fileName', 'defined') |
          selectattr('connectable.connected', 'equalto', true) |
          list |
          map(attribute='backing.fileName') + 
          (item.instance.config.hardware.device | 
           selectattr('deviceInfo.label', 'match', '^CD/DVD.*') |
           selectattr('backing.fileName', 'defined') |
           selectattr('connectable.connected', 'equalto', true) |
           list |
           map(attribute='deviceInfo') |
           map(attribute='label')) |
          batch(2) |
           map('reverse') |
           list }}"
      loop: "{{ vm_details.results }}"
      when: 
        - item.instance is defined
        - item.instance.config.hardware.device | 
          selectattr('deviceInfo.label', 'match', '^CD/DVD.*') |
          selectattr('backing.fileName', 'defined') |
          selectattr('connectable.connected', 'equalto', true) |
          list | length > 0

    - name: Refactor CD device information for cleaner output
      set_fact:
        vms_with_cd_media_clean: "{{ vms_with_cd_media_clean | default([]) + [clean_vm_info] }}"
      vars:
        clean_vm_info:
          vm_name: "{{ item.vm_name }}"
          power_state: "{{ item.power_state }}"
          esxi_host: "{{ item.esxi_host }}"
          cd_drives: "{{ cd_drives_info }}"
        cd_drives_info: >-
          {%- set devices = [] -%}
          {%- for vm in vm_details.results -%}
            {%- if vm.instance.summary.config.name == item.vm_name -%}
              {%- for device in vm.instance.config.hardware.device -%}
                {%- if 'CD/DVD' in device.deviceInfo.label and device.backing.fileName is defined and device.connectable.connected -%}
                  {%- set device_info = {
                    'device_label': device.deviceInfo.label,
                    'iso_file': device.backing.fileName,
                    'connected': device.connectable.connected,
                    'device_key': device.key
                  } -%}
                  {%- set _ = devices.append(device_info) -%}
                {%- endif -%}
              {%- endfor -%}
            {%- endif -%}
          {%- endfor -%}
          {{ devices }}
      loop: "{{ vms_with_cd_media }}"
      when: vms_with_cd_media | length > 0

    - name: Display VMs with mounted ISO files
      debug:
        msg: |
          ESXi Host: {{ inventory_hostname }}
          
          VMs with ISO files mounted to CD drives:
          {% if vms_with_cd_media_clean is defined and vms_with_cd_media_clean | length > 0 %}
          {% for vm in vms_with_cd_media_clean %}
          
          VM Name: {{ vm.vm_name }}
          Power State: {{ vm.power_state }}
          CD Drive Details:
          {% for cd in vm.cd_drives %}
            - Device: {{ cd.device_label }}
              ISO File: {{ cd.iso_file }}
              Connected: {{ cd.connected }}
              Device Key: {{ cd.device_key }}
          {% endfor %}
          {% endfor %}
          {% else %}
          No VMs found with ISO files mounted to CD drives.
          {% endif %}

    - name: Create summary statistics
      debug:
        msg: |
          Summary for {{ inventory_hostname }}:
          - Total VMs scanned: {{ vm_info.virtual_machines | length }}
          - VMs with mounted ISO files: {{ vms_with_cd_media_clean | default([]) | length }}
      when: vm_info.virtual_machines is defined