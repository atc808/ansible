---
- name: Find VMs with ISO files mounted to CD drives
  hosts: localhost
  gather_facts: false
  
  vars:
    # AAP credential variables - these will be injected by AAP
    vcenter_username: "{{ ansible_user }}"
    vcenter_password: "{{ ansible_password }}"
    # For vCenter connection, specify vCenter server and target ESXi host
    vcenter_hostname: "{{ vcenter_server }}"  # Would be provided as extra var
    target_esxi_host: "{{ esxi_host }}"       # Would be provided as extra var
    
  tasks:
    - name: Gather information about all VMs on ESXi host via vCenter
      community.vmware.vmware_vm_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        vm_type: vm
        show_attribute: true
        esxi_hostname: "{{ target_esxi_host }}"  # Filter VMs by ESXi host
      register: vm_info
      delegate_to: localhost

    - name: Get detailed configuration for each VM
      community.vmware.vmware_guest_info:
        hostname: "{{ inventory_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        uuid: "{{ item.uuid }}"
        schema: "vsphere"
        properties:
          - "config.hardware.device"
          - "summary.runtime.powerState"
      register: vm_details
      loop: "{{ vm_info.virtual_machines }}"
      delegate_to: localhost

    - name: Initialize list for VMs with CD media
      set_fact:
        vms_with_cd_media: []

    - name: Check each VM for mounted ISO files on CD drives
      set_fact:
        vms_with_cd_media: "{{ vms_with_cd_media + [vm_cd_info] }}"
      vars:
        vm_cd_info:
          vm_name: "{{ vm_item.guest_name }}"
          power_state: "{{ vm_item.power_state }}"
          esxi_host: "{{ inventory_hostname }}"
          uuid: "{{ vm_item.uuid }}"
          cd_devices: "{{ cd_devices_with_iso }}"
        vm_item: "{{ vm_info.virtual_machines[ansible_loop.index0] }}"
        vm_details_item: "{{ item.instance }}"
        cd_devices_with_iso: >-
          {%- set devices = [] -%}
          {%- if vm_details_item.config is defined and vm_details_item.config.hardware is defined -%}
            {%- for device in vm_details_item.config.hardware.device -%}
              {%- if device.deviceInfo is defined and 'CD/DVD' in device.deviceInfo.label -%}
                {%- if device.backing is defined and device.backing.fileName is defined -%}
                  {%- if device.connectable is defined and device.connectable.connected -%}
                    {%- set device_info = {
                      'device_label': device.deviceInfo.label,
                      'iso_file': device.backing.fileName,
                      'connected': device.connectable.connected,
                      'device_key': device.key
                    } -%}
                    {%- set _ = devices.append(device_info) -%}
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
          {{ devices }}
      loop: "{{ vm_details.results }}"
      when: 
        - item.instance is defined
        - vm_details_item.config is defined
        - vm_details_item.config.hardware is defined
        - cd_devices_with_iso | length > 0

    - name: Refactor CD device information for cleaner output
      set_fact:
        vms_with_cd_media_clean: "{{ vms_with_cd_media_clean | default([]) + [item] }}"
      loop: "{{ vms_with_cd_media }}"
      when: vms_with_cd_media | length > 0

    - name: Display VMs with mounted ISO files
      debug:
        msg: |
          ESXi Host: {{ inventory_hostname }}
          
          VMs with ISO files mounted to CD drives:
          {% if vms_with_cd_media_clean is defined and vms_with_cd_media_clean | length > 0 %}
          {% for vm in vms_with_cd_media_clean %}
          
          VM Name: {{ vm.vm_name }}
          Power State: {{ vm.power_state }}
          CD Drive Details:
          {% for cd in vm.cd_devices %}
            - Device: {{ cd.device_label }}
              ISO File: {{ cd.iso_file }}
              Connected: {{ cd.connected }}
              Device Key: {{ cd.device_key }}
          {% endfor %}
          {% endfor %}
          {% else %}
          No VMs found with ISO files mounted to CD drives.
          {% endif %}

    - name: Create summary statistics
      debug:
        msg: |
          Summary for {{ inventory_hostname }}:
          - Total VMs scanned: {{ vm_info.virtual_machines | length }}
          - VMs with mounted ISO files: {{ vms_with_cd_media_clean | default([]) | length }}
      when: vm_info.virtual_machines is defined