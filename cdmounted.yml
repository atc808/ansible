---
- name: Find VMs with ISO files mounted to CD drives
  hosts: all
  gather_facts: false
  connection: local
  
  vars:
    # AAP credential variables - these will be injected by AAP
    vcenter_username: "{{ ansible_user }}"
    vcenter_password: "{{ ansible_password }}"
    
  tasks:
    - name: Gather information about all VMs on ESXi host
      community.vmware.vmware_vm_info:
        hostname: "{{ inventory_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        vm_type: vm
        show_attribute: true
      register: vm_info
      delegate_to: localhost

    - name: Initialize list for VMs with CD media
      set_fact:
        vms_with_cd_media: []

    - name: Get detailed configuration for each VM and check for CD media
      community.vmware.vmware_guest_info:
        hostname: "{{ inventory_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        uuid: "{{ item.uuid }}"
        schema: "vsphere"
        properties:
          - "config.hardware.device"
      register: vm_detail
      loop: "{{ vm_info.virtual_machines }}"
      delegate_to: localhost

    - name: Debug VM detail structure for troubleshooting
      debug:
        var: vm_detail.results[0].instance
      when: vm_detail.results | length > 0

    - name: Process each VM for CD media
      set_fact:
        vms_with_cd_media: "{{ vms_with_cd_media + [vm_cd_info] }}"
      vars:
        vm_basic_info: "{{ vm_info.virtual_machines[ansible_loop.index0] }}"
        vm_hardware: "{{ item.instance }}"
        cd_devices_found: >-
          {%- set devices = [] -%}
          {%- if vm_hardware.config is defined and vm_hardware.config.hardware is defined -%}
            {%- for device in vm_hardware.config.hardware.device -%}
              {%- if device.deviceInfo is defined -%}
                {%- if 'CD/DVD' in (device.deviceInfo.label | default('')) -%}
                  {%- if device.backing is defined and device.backing.fileName is defined -%}
                    {%- if device.connectable is defined and device.connectable.connected == true -%}
                      {%- set device_info = {
                        'device_label': device.deviceInfo.label,
                        'iso_file': device.backing.fileName,
                        'connected': device.connectable.connected,
                        'device_key': device.key | default('N/A')
                      } -%}
                      {%- set _ = devices.append(device_info) -%}
                    {%- endif -%}
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
          {{ devices }}
        vm_cd_info:
          vm_name: "{{ vm_basic_info.guest_name }}"
          power_state: "{{ vm_basic_info.power_state }}"
          esxi_host: "{{ inventory_hostname }}"
          uuid: "{{ vm_basic_info.uuid }}"
          cd_devices: "{{ cd_devices_found }}"
      loop: "{{ vm_detail.results }}"
      when: 
        - item.instance is defined
        - cd_devices_found | length > 0

    - name: Display results
      debug:
        msg: |
          ===================================================
          ESXi Host: {{ inventory_hostname }}
          ===================================================
          
          {% if vms_with_cd_media | length > 0 %}
          VMs with ISO files mounted to CD drives:
          
          {% for vm in vms_with_cd_media %}
          VM Name: {{ vm.vm_name }}
          Power State: {{ vm.power_state }}
          UUID: {{ vm.uuid }}
          {% for cd in vm.cd_devices %}
          
          CD/DVD Drive Details:
            - Device: {{ cd.device_label }}
            - ISO File: {{ cd.iso_file }}
            - Connected: {{ cd.connected }}
            - Device Key: {{ cd.device_key }}
          {% endfor %}
          
          {% endfor %}
          {% else %}
          No VMs found with ISO files mounted to CD drives.
          {% endif %}

    - name: Summary statistics
      debug:
        msg: |
          ===================================================
          Summary for {{ inventory_hostname }}:
          ===================================================
          - Total VMs scanned: {{ vm_info.virtual_machines | length }}
          - VMs with mounted ISO files: {{ vms_with_cd_media | length }}
          ===================================================