---
- name: Create Nessus_Scanner role in vCenter
  hosts: localhost
  gather_facts: false
  vars:
    # Required parameters from Ansible Automation Platform environment variable
    vcenter_hostname: "{{ lookup('env', 'VMWARE_HOST') }}"         # vCenter FQDN from VMWARE_HOST env var
    vcenter_username: "{{ lookup('env', 'VMWARE_USER') }}"         # Admin user from VMWARE_USER env var  
    vcenter_password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"     # Admin password from VMWARE_PASSWORD env var
    vcenter_validate_certs: false                                 # Set to true in production
    # Add the missing scanner service account variable
    scanner_service_account: "{{ lookup('env', 'SCANNER_SERVICE_ACCOUNT') | default('nessus-scanner@vsphere.local') }}"
    
  tasks:
    - name: Validate required environment variables
      fail:
        msg: "Required environment variable {{ item }} is not set"
      when: lookup('env', item) == ""
      loop:
        - 'VMWARE_HOST'
        - 'VMWARE_USER'
        - 'VMWARE_PASSWORD'
      tags: validation

    - name: Get existing roles for reference
      community.vmware.vmware_local_role_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
      register: existing_roles
      delegate_to: localhost
      tags: debug
      
    - name: Display existing roles
      debug:
        var: existing_roles.local_role_info
      when: existing_roles is defined and existing_roles.local_role_info is defined
      tags: debug
    
    - name: Create Nessus_Scanner custom role with correct privileges for vSphere 8
      community.vmware.vmware_local_role_manager:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        local_role_name: "Nessus_Scanner"
        local_privilege_ids:

          # Optional privilege for compliance scanning (recommended
          - Global.Settings
          - LifecycleManager.Image.Read

      delegate_to: localhost
      register: role_creation
      tags:
        - nessus
        - security
        - vmware

    - name: Display role creation result
      debug:
        var: role_creation
      when: role_creation is defined
      tags: debug
      
    - name: Assign Nessus_Scanner role to service account at root level
      community.vmware.vmware_object_role_permission:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        role: "Nessus_Scanner"
        principal: "{{ scanner_service_account }}"                 # Service account from AAP (e.g., ENT_vSphere_ReadOnly)
        object_type: "Folder"
        object_name: "rootFolder"                                  # Assigns at global level
        state: present
      delegate_to: localhost
      register: permission_assignment
      when: role_creation is succeeded
      
    - name: Display permission assignment result
      debug:
        var: permission_assignment
      when: permission_assignment is defined
      tags: debug
      
    - name: Verify role creation and assignment
      community.vmware.vmware_object_role_permission_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        principal: "{{ scanner_service_account }}"
        object_type: "Folder"
        object_name: "rootFolder"
      register: verification
      delegate_to: localhost
      when: permission_assignment is succeeded
      
    - name: Display verification results
      debug:
        msg: "Role assignment verified: {{ verification.object_role_permission_info }}"
      when: verification is defined and verification.object_role_permission_info is defined
      tags: results

    - name: Summary of actions performed
      debug:
        msg: |
          Playbook execution summary:
          - Created role: {{ role_creation.changed | default(false) }}
          - Assigned permissions: {{ permission_assignment.changed | default(false) }}
          - Service account: {{ scanner_service_account }}
          - vCenter: {{ vcenter_hostname }}
      tags: summary