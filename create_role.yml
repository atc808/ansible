---
- name: Create Nessus_Scanner Role in vCenter
  hosts: localhost
  gather_facts: false
  vars:
    # Required parameters - provided by Ansible Automation Platform
    vcenter_hostname: "{{ vcenter_host }}"          # vCenter FQDN/IP
    vcenter_username: "{{ vcenter_user }}"          # Admin username
    vcenter_password: "{{ vcenter_pass }}"          # Admin password
    validate_certs: false                           # SSL validation
    
  tasks:
    - name: Create Nessus_Scanner role with required privileges
      community.vmware.vmware_local_role_manager:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ validate_certs }}"
        local_role_name: "Nessus_Scanner"
        action: create
        # Privileges mapped from document requirements
        local_privilege_ids:
          # Global.Settings
          - "Global.Settings"
          # vSphere Lifecycle Manager privileges
          - "lifecycleSettings.Read"
          - "lifecycleHealth.Read" 
          - "lifecycle.Read"
          - "lifecycleHCL.Read"
          - "lifecycleImage.Read"
          - "lifecycleRemediation.Read"
          - "lifecycleSoftwareRemediation.Read"
          - "lifecycleStagingArea.Read"
          # Manage Patches and Upgrades
          - "EsxUpdate.View"
          - "EsxUpdate.Update"
      register: role_result

    - name: Display role creation result
      ansible.builtin.debug:
        msg: "Role creation status: {{ role_result }}"

    - name: Assign Nessus_Scanner role to service account globally
      community.vmware.vmware_local_user_manager:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ validate_certs }}"
        local_user_name: "{{ scanning_account }}"    # Provided by AAP: ENT_vSphere_ReadOnly
        local_user_password: "{{ scanning_password }}" # Service account password
        roles:
          - "Nessus_Scanner"
        state: present
      when: role_result is succeeded
      register: assignment_result

    - name: Display assignment result
      ansible.builtin.debug:
        msg: "Role assignment status: {{ assignment_result }}"